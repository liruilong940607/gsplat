# This workflows will upload a Python Package using twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Release Wheels


on:
  release:
    types: [created]
    # branches: [main]

jobs:


  # build wheels using action building.yml
  build_wheels:
    name: Call Composite Action
    uses: ./.github/workflows/building.yml
            

  create_release_and_upload_packages:
    name: Uplodad to Github Release
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download packages
      id: download_artifacts
      uses: actions/download-artifact@v3
      with:
        name: compiled_wheels_python${{ matrix.python-version }}
        path: dist

    - name: Upload packages to GitHub Release
      id: upload_assets
      run: |
        for file in $(ls ./dist/*.*); do
          echo "Uploading $file..."
          filename=$(basename "$file")
          encoded_filename=$(echo "$filename" | sed 's/+/%2B/g')
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"$file" \
            "${{ github.event.release.upload_url }}=$encoded_filename"
        done

  upload_pypi:
    name: Upload to PyPi
    needs: [build_sdist,build_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: pypi_packages
        path: dist
    - name: Publish package to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/

    - name: Publish package to PyPI
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |         
        twine upload --username __token__ --password $PYPI_TOKEN dist/*
